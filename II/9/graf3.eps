%!PS-Adobe-2.0 EPSF-2.0
%%Title: graf3.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Mon Nov 14 20:27:34 2011
%%DocumentFonts: 
%%BoundingBox: 50 50 645 475
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graf3.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bobran)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 14 20:27:34 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 645 50 lineto 645 475 lineto 50 475 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1474 704 M
63 0 V
10036 0 R
-63 0 V
1474 1554 M
63 0 V
10036 0 R
-63 0 V
1474 2403 M
63 0 V
10036 0 R
-63 0 V
1474 3253 M
63 0 V
10036 0 R
-63 0 V
1474 4103 M
63 0 V
10036 0 R
-63 0 V
1474 4952 M
63 0 V
10036 0 R
-63 0 V
1474 5802 M
63 0 V
10036 0 R
-63 0 V
1474 6652 M
63 0 V
10036 0 R
-63 0 V
1474 7501 M
63 0 V
10036 0 R
-63 0 V
1474 704 M
0 63 V
0 7074 R
0 -63 V
2917 704 M
0 63 V
0 7074 R
0 -63 V
4359 704 M
0 63 V
0 7074 R
0 -63 V
5802 704 M
0 63 V
0 7074 R
0 -63 V
7245 704 M
0 63 V
0 7074 R
0 -63 V
8688 704 M
0 63 V
0 7074 R
0 -63 V
10130 704 M
0 63 V
0 7074 R
0 -63 V
11573 704 M
0 63 V
0 7074 R
0 -63 V
stroke
1474 7841 N
0 -7137 V
10099 0 V
0 7137 V
-10099 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.000 UP
1.000 UL
LT0
LTb
LT0
10718 7668 M
591 0 V
-591 31 R
0 -62 V
591 62 R
0 -62 V
10722 706 M
-31 0 R
62 0 V
-62 0 R
62 0 V
-22 1 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-51 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-35 3 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-44 3 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-56 4 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-41 6 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-78 8 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-96 11 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-69 7 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-80 12 R
-31 0 R
62 0 V
-62 0 R
62 0 V
-106 16 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-111 14 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-102 14 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
-337 68 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-350 73 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
-570 132 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
-676 177 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
stroke 8456 1275 M
-562 156 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
-503 154 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
-946 357 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
-828 383 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
-556 307 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
-553 370 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
-401 311 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
-325 287 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
-273 273 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
-211 224 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
-222 275 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
-206 291 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
-164 245 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
-146 239 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
-173 341 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
-119 233 R
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
-77 107 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
-124 320 R
0 60 V
stroke 2594 6639 M
-31 -60 R
62 0 V
-62 60 R
62 0 V
-87 171 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
-87 193 R
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
-81 172 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
-65 118 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
10638 706 M
168 0 V
-168 -31 R
0 62 V
168 -62 R
0 62 V
-150 -30 R
149 0 V
-149 -31 R
0 62 V
149 -62 R
0 62 V
-162 -29 R
136 0 V
-136 -31 R
0 62 V
136 -62 R
0 62 V
-132 -28 R
119 0 V
-119 -31 R
0 62 V
119 -62 R
0 62 V
-128 -28 R
112 0 V
-112 -31 R
0 62 V
112 -62 R
0 62 V
-132 -27 R
101 0 V
-101 -31 R
0 62 V
101 -62 R
0 62 V
-106 -25 R
92 0 V
-92 -31 R
0 62 V
92 -62 R
0 62 V
-140 -22 R
93 0 V
-93 -31 R
0 62 V
93 -62 R
0 62 V
-155 -20 R
88 0 V
-88 -31 R
0 62 V
88 -62 R
0 62 V
-123 -24 R
83 0 V
-83 -31 R
0 62 V
83 -62 R
0 62 V
-132 -18 R
81 0 V
-81 -31 R
0 62 V
81 -62 R
0 62 V
-156 -15 R
81 0 V
-81 -31 R
0 62 V
81 -62 R
0 62 V
-158 -15 R
76 0 V
-76 -31 R
0 62 V
stroke 10267 828 M
76 -62 R
0 62 V
-146 -16 R
75 0 V
-75 -31 R
0 62 V
75 -62 R
0 62 V
-379 38 R
70 0 V
-70 -31 R
0 62 V
70 -62 R
0 62 V
-387 44 R
66 0 V
-66 -31 R
0 62 V
66 -62 R
0 62 V
-611 104 R
78 0 V
-78 -31 R
0 62 V
78 -62 R
0 62 V
-718 150 R
67 0 V
-67 -31 R
0 62 V
67 -62 R
0 62 V
-594 131 R
60 0 V
-60 -31 R
0 62 V
60 -62 R
0 62 V
-529 131 R
54 0 V
-54 -31 R
0 62 V
54 -62 R
0 62 V
-964 335 R
44 0 V
-44 -31 R
0 62 V
44 -62 R
0 62 V
-837 365 R
36 0 V
-36 -31 R
0 62 V
36 -62 R
0 62 V
-558 291 R
31 0 V
-31 -31 R
0 62 V
31 -62 R
0 62 V
-551 357 R
26 0 V
-26 -31 R
0 62 V
26 -62 R
0 62 V
-395 301 R
23 0 V
-23 -31 R
0 62 V
23 -62 R
0 62 V
-315 279 R
20 0 V
-20 -31 R
0 62 V
20 -62 R
0 62 V
-261 267 R
18 0 V
-18 -31 R
0 62 V
18 -62 R
0 62 V
-197 220 R
16 0 V
-16 -31 R
0 62 V
16 -62 R
0 62 V
-207 273 R
15 0 V
-15 -31 R
0 62 V
15 -62 R
0 62 V
-189 291 R
14 0 V
-14 -31 R
0 62 V
14 -62 R
0 62 V
stroke 3218 4916 M
-146 248 R
12 0 V
-12 -31 R
0 62 V
12 -62 R
0 62 V
-127 243 R
12 0 V
-12 -31 R
0 62 V
12 -62 R
0 62 V
-153 348 R
11 0 V
-11 -31 R
0 62 V
11 -62 R
0 62 V
-99 242 R
10 0 V
-10 -31 R
0 62 V
10 -62 R
0 62 V
-55 117 R
9 0 V
-9 -31 R
0 62 V
9 -62 R
0 62 V
-104 340 R
11 0 V
-11 -31 R
0 62 V
11 -62 R
0 62 V
-67 200 R
11 0 V
-11 -31 R
0 62 V
11 -62 R
0 62 V
-66 225 R
10 0 V
-10 -31 R
0 62 V
10 -62 R
0 62 V
-59 204 R
9 0 V
-9 -31 R
0 62 V
9 -62 R
0 62 V
-44 154 R
9 0 V
-9 -31 R
0 62 V
9 -62 R
0 62 V
10722 706 Pls
10731 707 Pls
10711 709 Pls
10707 712 Pls
10694 715 Pls
10669 719 Pls
10659 725 Pls
10612 734 Pls
10547 745 Pls
10509 752 Pls
10460 765 Pls
10385 781 Pls
10305 797 Pls
10234 812 Pls
9928 881 Pls
9609 956 Pls
9070 1091 Pls
8425 1272 Pls
7894 1434 Pls
7422 1596 Pls
6507 1962 Pls
5710 2358 Pls
5185 2680 Pls
4663 3068 Pls
4293 3400 Pls
3999 3710 Pls
3757 4008 Pls
3577 4259 Pls
3386 4563 Pls
3211 4885 Pls
3078 5164 Pls
2963 5438 Pls
2821 5817 Pls
2733 6090 Pls
2687 6238 Pls
2594 6609 Pls
2538 6840 Pls
2482 7096 Pls
2432 7331 Pls
2398 7516 Pls
11013 7668 Pls
1.000 UL
LT1
LTb
LT1
10718 7448 M
591 0 V
2253 7841 M
37 -187 V
102 -438 V
102 -381 V
102 -336 V
102 -301 V
102 -272 V
102 -247 V
102 -226 V
102 -208 V
102 -194 V
102 -179 V
102 -169 V
102 -157 V
102 -148 V
102 -140 V
102 -133 V
102 -125 V
102 -120 V
102 -113 V
102 -109 V
102 -104 V
102 -99 V
102 -96 V
102 -91 V
102 -88 V
102 -85 V
102 -82 V
102 -79 V
102 -76 V
102 -74 V
102 -72 V
102 -69 V
102 -67 V
102 -65 V
102 -63 V
102 -62 V
102 -59 V
102 -59 V
102 -56 V
102 -55 V
102 -54 V
102 -53 V
103 -51 V
102 -50 V
102 -49 V
102 -47 V
102 -47 V
102 -46 V
102 -44 V
102 -44 V
102 -43 V
102 -42 V
102 -41 V
102 -40 V
102 -39 V
102 -39 V
102 -38 V
102 -37 V
102 -37 V
102 -36 V
102 -35 V
102 -35 V
102 -34 V
102 -34 V
102 -33 V
102 -32 V
102 -32 V
102 -32 V
102 -31 V
102 -30 V
102 -30 V
102 -30 V
102 -29 V
102 -28 V
102 -28 V
102 -28 V
102 -28 V
102 -27 V
77 -20 V
stroke
LTb
1474 7841 N
0 -7137 V
10099 0 V
0 7137 V
-10099 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
