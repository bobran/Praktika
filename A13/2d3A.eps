%!PS-Adobe-2.0 EPSF-2.0
%%Title: 2d3A.tex
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Mon Dec  3 19:44:46 2012
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (2d3A.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (bobran)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Dec  3 19:44:46 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1606 704 M
63 0 V
5200 0 R
-63 0 V
1606 1213 M
63 0 V
5200 0 R
-63 0 V
1606 1722 M
63 0 V
5200 0 R
-63 0 V
1606 2231 M
63 0 V
5200 0 R
-63 0 V
1606 2740 M
63 0 V
5200 0 R
-63 0 V
1606 3248 M
63 0 V
5200 0 R
-63 0 V
1606 3757 M
63 0 V
5200 0 R
-63 0 V
1606 4266 M
63 0 V
5200 0 R
-63 0 V
1606 4775 M
63 0 V
5200 0 R
-63 0 V
1606 704 M
0 63 V
0 4008 R
0 -63 V
2483 704 M
0 63 V
0 4008 R
0 -63 V
3360 704 M
0 63 V
0 4008 R
0 -63 V
4238 704 M
0 63 V
0 4008 R
0 -63 V
5115 704 M
0 63 V
0 4008 R
0 -63 V
5992 704 M
0 63 V
0 4008 R
0 -63 V
6869 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1606 4775 N
0 -4071 V
5263 0 V
0 4071 V
-5263 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
5992 4201 Pls
5996 4171 Pls
6001 4150 Pls
6005 4201 Pls
6009 4219 Pls
6014 4150 Pls
6018 4200 Pls
6023 4167 Pls
6027 4277 Pls
6031 4284 Pls
6036 4331 Pls
6040 4311 Pls
6044 4296 Pls
6049 4312 Pls
6053 4316 Pls
6058 4316 Pls
6062 4308 Pls
6066 4330 Pls
6071 4351 Pls
6075 4344 Pls
6080 4339 Pls
6084 4341 Pls
6088 4378 Pls
6093 4379 Pls
6097 4402 Pls
6101 4458 Pls
6106 4449 Pls
6110 4497 Pls
6115 4477 Pls
6119 4454 Pls
6123 4470 Pls
6128 4473 Pls
6132 4497 Pls
6137 4469 Pls
6141 4451 Pls
6145 4453 Pls
6150 4434 Pls
6154 4321 Pls
6158 4471 Pls
6163 4465 Pls
6167 4451 Pls
6172 4479 Pls
6176 4453 Pls
6180 4502 Pls
6185 4504 Pls
6189 4316 Pls
6194 4503 Pls
6198 4540 Pls
6202 4539 Pls
6207 4560 Pls
6211 4538 Pls
6216 4514 Pls
6220 4398 Pls
6224 4513 Pls
6229 4511 Pls
6233 4535 Pls
6237 4541 Pls
6242 4510 Pls
6246 4479 Pls
6251 4507 Pls
6255 4576 Pls
6259 4566 Pls
6264 4569 Pls
6268 4546 Pls
6273 4504 Pls
6277 4550 Pls
6281 4456 Pls
6286 4540 Pls
6290 4521 Pls
6294 4521 Pls
6299 4526 Pls
6303 4532 Pls
6308 4519 Pls
6312 4499 Pls
6316 4542 Pls
6321 4590 Pls
6325 4582 Pls
6330 4598 Pls
6334 4641 Pls
6338 4665 Pls
6343 4628 Pls
6347 4585 Pls
6351 4581 Pls
6356 4616 Pls
6360 4578 Pls
6365 4572 Pls
6369 4551 Pls
6373 4559 Pls
6378 4583 Pls
6382 4554 Pls
6387 4551 Pls
6391 4571 Pls
6395 4579 Pls
6400 4570 Pls
6404 4613 Pls
6408 4622 Pls
6413 4644 Pls
6417 4570 Pls
6422 4567 Pls
6426 4591 Pls
6430 4537 Pls
6435 4521 Pls
6439 4555 Pls
6444 4532 Pls
6448 4544 Pls
6452 4550 Pls
6457 4537 Pls
6461 4542 Pls
6466 4550 Pls
6470 4509 Pls
6474 4546 Pls
6479 4515 Pls
6483 4542 Pls
6487 4550 Pls
6492 4538 Pls
6496 4548 Pls
6501 4560 Pls
6505 4615 Pls
6509 4618 Pls
6514 4592 Pls
6518 4590 Pls
6523 4615 Pls
6527 4574 Pls
6531 4588 Pls
6536 4560 Pls
6540 4543 Pls
6544 4554 Pls
6549 4548 Pls
6553 4538 Pls
6558 4557 Pls
6562 4601 Pls
6566 4614 Pls
6571 4551 Pls
6575 4568 Pls
6580 4592 Pls
6584 4590 Pls
6588 4581 Pls
6593 4589 Pls
6597 4569 Pls
6601 4609 Pls
6606 4553 Pls
6610 4587 Pls
6615 4599 Pls
6619 4557 Pls
6623 4560 Pls
6628 4600 Pls
6632 4585 Pls
6637 4590 Pls
6641 4565 Pls
6645 4562 Pls
6650 4584 Pls
6654 4612 Pls
6658 4626 Pls
6663 4616 Pls
6667 4607 Pls
6672 4612 Pls
6676 4610 Pls
6680 4624 Pls
6685 4647 Pls
6689 4636 Pls
6694 4578 Pls
6698 4567 Pls
6702 4601 Pls
6707 4603 Pls
6711 4626 Pls
6715 4621 Pls
6720 4546 Pls
6724 4555 Pls
6729 4586 Pls
6733 4567 Pls
6737 4544 Pls
6742 4519 Pls
6746 4498 Pls
6751 4546 Pls
6755 4515 Pls
6759 4521 Pls
6764 4531 Pls
6768 4521 Pls
6773 4558 Pls
6777 4542 Pls
6781 4558 Pls
6786 4596 Pls
6790 4591 Pls
6794 4550 Pls
6799 4557 Pls
6803 4616 Pls
6808 4597 Pls
6812 4566 Pls
6816 4521 Pls
6821 4519 Pls
6825 4487 Pls
6830 4421 Pls
6834 4456 Pls
6838 4470 Pls
6843 4518 Pls
6847 4524 Pls
6851 4537 Pls
6856 4519 Pls
6860 4588 Pls
6865 4578 Pls
6869 4502 Pls
1.000 UP
1.000 UL
LT1
3360 989 Crs
3373 985 Crs
3387 1002 Crs
3400 1016 Crs
3413 1036 Crs
3426 1063 Crs
3439 1089 Crs
3452 1105 Crs
3466 1125 Crs
3479 1156 Crs
3492 1195 Crs
3505 1230 Crs
3518 1253 Crs
3531 1271 Crs
3545 1290 Crs
3558 1275 Crs
3571 1273 Crs
3584 1285 Crs
3597 1292 Crs
3610 1301 Crs
3623 1317 Crs
3637 1327 Crs
3650 1335 Crs
3663 1346 Crs
3676 1362 Crs
3689 1375 Crs
3702 1384 Crs
3716 1398 Crs
3729 1408 Crs
3742 1427 Crs
3755 1439 Crs
3768 1454 Crs
3781 1472 Crs
3795 1492 Crs
3808 1509 Crs
3821 1524 Crs
3834 1542 Crs
3847 1563 Crs
3860 1596 Crs
3873 1612 Crs
3887 1618 Crs
3900 1629 Crs
3913 1641 Crs
3926 1656 Crs
3939 1664 Crs
3952 1671 Crs
3966 1683 Crs
3979 1698 Crs
3992 1710 Crs
4005 1716 Crs
4018 1735 Crs
4031 1748 Crs
4045 1767 Crs
4058 1781 Crs
4071 1799 Crs
4084 1820 Crs
4097 1839 Crs
4110 1853 Crs
4123 1873 Crs
4137 1890 Crs
4150 1909 Crs
4163 1925 Crs
4176 1943 Crs
4189 1958 Crs
4202 1974 Crs
4216 1984 Crs
4229 1996 Crs
4242 2008 Crs
4255 2019 Crs
4268 2029 Crs
4281 2042 Crs
4295 2054 Crs
4308 2063 Crs
4321 2075 Crs
4334 2085 Crs
4347 2098 Crs
4360 2111 Crs
4373 2124 Crs
4387 2132 Crs
4400 2150 Crs
4413 2162 Crs
4426 2178 Crs
4439 2194 Crs
4452 2207 Crs
4466 2215 Crs
4479 2230 Crs
4492 2242 Crs
4505 2263 Crs
4518 2275 Crs
4531 2292 Crs
4545 2316 Crs
4558 2334 Crs
4571 2351 Crs
4584 2369 Crs
4597 2388 Crs
4610 2402 Crs
4623 2412 Crs
4637 2436 Crs
4650 2463 Crs
4663 2479 Crs
4676 2490 Crs
4689 2514 Crs
4702 2518 Crs
4716 2533 Crs
4729 2515 Crs
4742 2529 Crs
4755 2545 Crs
4768 2575 Crs
4781 2569 Crs
4795 2580 Crs
4808 2602 Crs
4821 2610 Crs
4834 2612 Crs
4847 2620 Crs
4860 2667 Crs
4873 2696 Crs
4887 2720 Crs
4900 2724 Crs
4913 2722 Crs
4926 2770 Crs
4939 2747 Crs
4952 2817 Crs
4966 2837 Crs
4979 2793 Crs
4992 2828 Crs
5005 2861 Crs
5018 2883 Crs
5031 2860 Crs
5044 2937 Crs
5058 2931 Crs
5071 2959 Crs
5084 2958 Crs
5097 2987 Crs
5110 3030 Crs
5123 3021 Crs
5137 3064 Crs
5150 3115 Crs
5163 3075 Crs
5176 3121 Crs
5189 3107 Crs
5202 3122 Crs
5216 3192 Crs
5229 3224 Crs
5242 3163 Crs
5255 3279 Crs
5268 3320 Crs
5281 3298 Crs
5294 3276 Crs
5308 3330 Crs
5321 3358 Crs
5334 3372 Crs
5347 3415 Crs
5360 3423 Crs
5373 3369 Crs
5387 3414 Crs
5400 3332 Crs
5413 3265 Crs
5426 3323 Crs
5439 3348 Crs
5452 3415 Crs
5466 3455 Crs
5479 3481 Crs
5492 3478 Crs
5505 3455 Crs
5518 3494 Crs
5531 3496 Crs
5544 3487 Crs
5558 3539 Crs
5571 3591 Crs
5584 3588 Crs
5597 3567 Crs
5610 3594 Crs
5623 3630 Crs
5637 3652 Crs
5650 3658 Crs
5663 3661 Crs
5676 3718 Crs
5689 3809 Crs
5702 3927 Crs
5716 3963 Crs
5729 3941 Crs
5742 4018 Crs
5755 4048 Crs
5768 4054 Crs
5781 4052 Crs
5794 4024 Crs
5808 3993 Crs
5821 3978 Crs
5834 3965 Crs
5847 3934 Crs
5860 3949 Crs
5873 4078 Crs
5887 4087 Crs
5900 4109 Crs
5913 4076 Crs
5926 4119 Crs
5939 4168 Crs
5952 4162 Crs
5966 4145 Crs
5979 4177 Crs
1.000 UP
1.000 UL
LT2
1606 713 Star
1825 711 Star
2045 713 Star
2264 717 Star
2483 728 Star
2702 739 Star
2922 765 Star
3141 817 Star
3360 955 Star
3580 1278 Star
3799 1500 Star
4018 1732 Star
4238 2004 Star
4457 2205 Star
4676 2485 Star
4895 2749 Star
5115 2999 Star
5334 3266 Star
5553 3552 Star
5773 4024 Star
5992 4175 Star
6211 4392 Star
6430 4492 Star
6650 4492 Star
6869 4561 Star
1.000 UL
LTb
1606 4775 N
0 -4071 V
5263 0 V
0 4071 V
-5263 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
